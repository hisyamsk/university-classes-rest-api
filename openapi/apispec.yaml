openapi: '3.0.2'
info:
  title: University Classes API
  version: '1.0'
servers:
  - url: 'https://localhost:8000/api'
paths:
  /students:
    get:
      tags:
        - 'Students'
      summary: Get all students
      responses:
        200:
          description: Success get all students
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: OK
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Students'
        500:
          description: Failed to get all students due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    post:
      tags:
        - 'Students'
      summary: Add a new student
      requestBody:
        $ref: '#/components/requestBodies/CreateStudent'
      responses:
        201:
          description: Success to add a new student to database
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateStudentResponse'
        400:
          description: Failed to add new student to client's bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        500:
          description: Failed to create new student due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /students/{studentId}:
    get:
      tags:
        - 'Students'
      summary: Get student with id parameter
      parameters:
        - $ref: '#/components/parameters/studentId'
      responses:
        200:
          description: Success get student with id parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: OK
                  data:
                    $ref: '#/components/schemas/Students'
        404:
          description: Failed to get student with id parameter due to id is non existent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        500:
          description: Failed to get student with id parameter due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      tags:
        - 'Students'
      summary: Update student with id paramter
      parameters:
        - $ref: '#/components/parameters/studentId'
      requestBody:
        $ref: '#/components/requestBodies/CreateStudent'
      responses:
        200:
          description: Success to update student with id parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateStudentResponse'
        404:
          description: Failed to get student with id parameter due to id is non existent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        500:
          description: Failed to get student with id parameter due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      tags:
        - 'Students'
      summary: Delete student with id parameter
      parameters:
        - $ref: '#/components/parameters/studentId'
      responses:
        200:
          description: Success delete student with id parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessDelete'
        404:
          description: Failed to delete student with id parameter due to id is non existent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        500:
          description: Failed to get student with id parameter due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /students/{studentId}/classes:
    get:
      tags:
        - "Students"
      summary: Get list of student's enrolled classes
      parameters:
        - $ref: '#/components/parameters/studentId'
      responses:
        200:
          description: Success get a list of student's enrolled class with id parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: OK
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        classId:
                          type: number
                        className:
                          type: string
                          example: "Data Structure and Algorithms"
        404:
          description: Failed to get student's enrolled class due to id is non existent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        500:
          description: Failed to get student's enrolled class due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /classes:
    get:
      tags:
        - "Classes"
      summary: Get all class details
      responses:
        200:
          description: Success get all classes
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: OK
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Classes'
    post:
      tags:
        - "Classes"
      summary: Add a new class
      requestBody:
        $ref: '#/components/requestBodies/CreateClass'
      responses:
        201:
          description: Success to create a new class
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateClassResponse'
        400:
          description: Failed to create a new class due to client's bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'
        500:
          description: Failed to create a new class due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /classes/{classId}:
    get:
      tags:
        - "Classes"
      summary: Get class with Id parameter
      parameters:
        - $ref: '#/components/parameters/classId'
      responses:
        200:
          description: Success to get class with id parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: OK
                  data:
                    $ref: '#/components/schemas/Classes'
        404:
          description: Failed to get class with id parameter due to id is non existent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        500:
          description: Failed to get class with id parameter due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    patch:
      summary: Update a class with Id parameter
      tags:
        - "Classes"
      parameters:
        - $ref: '#/components/parameters/classId'
      requestBody:
        $ref: '#/components/requestBodies/CreateClass'
      responses:
        200:
          description: Success to update a class
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateClassResponse'
        404:
          description: Failed to update a class due to Id is non existent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        500:
          description: Failed to update a class due to Id is non existent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      summary: Delete a class with Id parameter
      tags:
        - "Classes"
      responses:
        200:
          description: Success to delete a class with Id parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessDelete'
        404:
          description: Failed to delete a class due to Id is non existent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        500:
          description: Failed to delete a class due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /classes/{classId}/students:
    get:
      tags:
        - "Classes"
      summary: Get list of enrolled students with classId parameter
      parameters:
        - $ref: '#components/parameters/classId'
      responses:
        200:
          description: Success to get the enrolled students with classId parameter
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    example: 200
                  status:
                    type: string
                    example: OK
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        studentId: 
                          type: number
                        studentName:
                          type: string
        404:
          description: Failed to get list of enrolled students due to classId is non existent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        500:
          description: Failed to get class with id parameter due to internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
components:
  schemas:
    Students:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
        active:
          type: boolean
        semester:
          type: number
    CreateOrUpdateStudentResponse:
      type: object
      properties:
        code:
          type: number
          example: 200
        status:
          type: string
          example: OK | CREATED
        data:
          $ref: '#/components/schemas/Students'
    CreateOrUpdateStudentRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        active:
          type: boolean
        semester:
          type: number

    EnrolledClasses:
      type: object
      properties:
        studentId:
          type: number
        studentName:
          type: string

    Classes:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        startAt:
          type: string
        endAt:
          type: string
    CreateOrUpdateClassResponse:
      type: object
      properties:
        code:
          type: number
          example: 200
        status:
          type: string
          example: OK | CREATED
        data:
          $ref: '#/components/schemas/Classes'
    CreateOrUpdateClassRequest:
      type: object
      properties:
        name: 
          type: string
        startAt:
          type: string
        endAt:
          type: string

    SuccessDelete:
      type: object
      properties:
        code:
          type: number
          example: 200
        status:
          type: string
          example: OK

    InternalServerError:
      type: object
      properties:
        code:
          type: number
          example: 500
        status:
          type: string
          example: Internal Server Error
    BadRequestError:
      type: object
      properties:
        code:
          type: number
          example: 400
        status:
          type: string
          example: Bad Request
        data:
          type: string
          example: Id filed is required
    NotFoundError:
      type: object
      properties:
        code:
          type: number
          example: 404
        status:
          type: string
          example: 'NOT FOUND'
        data:
          type: string
          example: 'Id: 5 not found!'

  parameters:
    studentId:
      name: studentId
      in: query
      required: true
      description: The id of student
      schema:
        type: string
    classId:
      name: classId
      in: query
      required: true
      description: The id of class
      schema:
        type: string

  requestBodies:
    CreateStudent:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOrUpdateStudentRequest'
    CreateClass:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOrUpdateClassRequest'